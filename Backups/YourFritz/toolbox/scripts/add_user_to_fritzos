#! /bin/sh
# SPDX-License-Identifier: GPL-2.0-or-later
#######################################################################################################
#                                                                                                     #
# add a new administrative user to ar7.cfg on a FRITZ!OS device                                       #
#                                                                                                     #
#######################################################################################################
#                                                                                                     #
# Copyright (C) 2016-2017 P.HÃ¤mmerlein (peterpawn@yourfritz.de)                                       #
#                                                                                                     #
# This program is free software; you can redistribute it and/or modify it under the terms of the GNU  #
# General Public License as published by the Free Software Foundation; either version 2 of the        #
# License, or (at your option) any later version.                                                     #
#                                                                                                     #
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without   #
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU      #
# General Public License under http://www.gnu.org/licenses/gpl-2.0.html for more details.             #
#                                                                                                     #
#######################################################################################################
#                                                                                                     #
# The script will add a new user with the specified name and password (both values will be set to     #
# 'superuser' as default value, if it was not specified while calling the script) to the ar7.cfg file #
# on a FRITZ!OS device.                                                                               #
# The new user's name is the first argument and the new password is the second - no check will be     #
# made, if the specified name would be duplicate (the data is encrypted and this script will not try  #
# to decode it in any manner).                                                                        #
#                                                                                                     #
# It will create its own character device to access the TFFS node 113 and it will add the new entry   #
# with the first free user ID below 100 with all - usually encrypted - values as plain text.          #
#                                                                                                     #
# The major device number of the TFFS driver will be read from "/proc/devices" and the script needs   #
# a writable filesystem mounted on "/tmp" - this means, the caller is responsible to ensure, that     #
#                                                                                                     #
# - procfs is mounted on /proc                                                                        #
# - a writable filesystem (usually tmpfs) is mounted on /tmp                                          #
# - no ctlmgr instance is running, which may use its own copy of the edited file and overwrite the    #
#   changes to "ar7.cfg"                                                                              #
#                                                                                                     #
#######################################################################################################
#                                                                                                     #
# constants                                                                                           #
#                                                                                                     #
#######################################################################################################
tmpdir="/tmp"
proc="/proc"
ar7_minor=113
default_username="superuser"
default_password="$default_username"
user_template="\t\tenabled = yes;\n"
user_template="${user_template}\t\tid = %u;\n"
user_template="${user_template}\t\tname = \"%s\";\n"
user_template="${user_template}\t\temail = \"\";\n"
user_template="${user_template}\t\tpassword = \"%s\";\n"
user_template="${user_template}\t\tvpn_access = no;\n"
user_template="${user_template}\t\tbox_admin_rights = secobj_access_rights_readwrite_from_everywhere;\n"
user_template="${user_template}\t\tnas_rights = secobj_access_rights_none;\n"
user_template="${user_template}\t\tphone_admin_rights = secobj_access_rights_readwrite_from_everywhere;\n"
user_template="${user_template}\t\thomeauto_admin_rights = secobj_access_rights_readwrite_from_everywhere;\n"
user_template="${user_template}\t} {\n"
#######################################################################################################
#                                                                                                     #
# subfunctions                                                                                        #
#                                                                                                     #
#######################################################################################################
#                                                                                                     #
# read and sort user IDs                                                                              #
#                                                                                                     #
#######################################################################################################
read_users()
{
	i=0
	while read id; do
		i=$(( i + 1 ))
		eval id_$i=$id
	done
	[ $i -eq 0 ] && return 1 # no users found, usually the source file is empty
	j=$i
	while [ $j -gt 1 ]; do
		n=1
		k=0
		while [ $k -lt $(( j - 1 )) ]; do
			k=$(( k + 1 ))
			eval l=\$id_$k
			eval r=\$id_$(( k + 1 ))
			[ $l -lt $r ] || continue
			eval id_$k=$r
			eval id_$(( k + 1 ))=$l
			n=$k
		done
		j=$n
	done
	j=0
	while [ $j -lt $i ]; do
		j=$(( j + 1 ))
		eval printf "%u:" \$id_$j
	done
}
#######################################################################################################
#                                                                                                     #
# find the first unused user ID below 100                                                             #
#                                                                                                     #
#######################################################################################################
find_free_user()
{
	n=99
	IFS=:
	set -- $1
	while [ $# -gt 0 ]; do
		[ $1 -lt $n ] && printf "%u" $n && return 0
		[ $1 -gt $n ] && shift && continue
		n=$(( n - 1 ))
		shift
	done
}
#######################################################################################################
#                                                                                                     #
# check debug option                                                                                  #
#                                                                                                     #
#######################################################################################################
if [ "$1" = "-d" ] || [ "$1" = "--debug" ]; then
	debug=1
	shift
else
	debug=0
fi
#######################################################################################################
#                                                                                                     #
# process parameters                                                                                  #
#                                                                                                     #
#######################################################################################################
new_username="${1:-$default_username}"
new_password="${2:-$default_password}"
#######################################################################################################
#                                                                                                     #
# determine the major device number for TFFS nodes                                                    #
#                                                                                                     #
#######################################################################################################
if ! [ -e "$proc/devices" ]; then
	[ $debug -eq 1 ] && printf "The file '%s/devices' does not exist, please mount procfs first.\n" "$proc" 1>&2
	exit 1
fi
major=$(sed -n -e "s|^ *\([0-9]\{1,3\}\) tffs\$|\1|p" "$proc/devices")
if [ ${#major} -eq 0 ]; then
	[ $debug -eq 1 ] && printf "No TFFS device was found in '%s/devices'.\n" "$proc" 1>&2
	exit 1
fi
#######################################################################################################
#                                                                                                     #
# create a character device for our TFFS node                                                         #
#                                                                                                     #
#######################################################################################################
if ! [ -d "$tmpdir" ]; then
	[ $debug -eq 1 ] && printf "The directory '%s' does not exist.\n" "$tmpdir" 1>&2
	exit 1
fi
node_name="$tmpdir/$$_add_user_cdev"
rm "$node_name" 2>/dev/null
touch "$node_name" 2>/dev/null
if ! [ -e "$node_name" ]; then
	[ $debug -eq 1 ] && printf "The directory '%s' is not writable.\n" "$tmpdir" 1>&2
	exit 1
fi
rm "$node_name" 2>/dev/null
mknod -m 666 "$node_name" c $major $ar7_minor
if ! [ -c "$node_name" ]; then
	[ $debug -eq 1 ] && printf "Error creating character device for the TFFS stream.\n" 1>&2
	exit 1
fi
#######################################################################################################
#                                                                                                     #
# copy the existing content and collect the present user IDs                                          #
#                                                                                                     #
#######################################################################################################
copy="$tmpdir/$$_add_user_org"
cat "$node_name" >"$copy" 2>/dev/null
new_users="$tmpdir/$$_add_user_boxusers"
new_user="$tmpdir/$$_add_user_adduser"
sed -n -e "/^boxusers/,/^}/p" "$copy" >"$new_users"
userids="$(sed -n -e "/^[ \t]*id =/s|.* = \([0-9]*\);|\1|p" $new_users | read_users)"
#######################################################################################################
#                                                                                                     #
# prepare new boxusers.users section                                                                  #
#                                                                                                     #
#######################################################################################################
new_id=$(find_free_user $userids)
printf "$user_template" $new_id "$new_username" "$new_password" >"$new_user"
sed -n -e "/^boxusers/,/^}/p" "$copy" | sed -e "/^[ \t]*users {\$/r $new_user" | sed -e "1d" -e "/[ \t]*}\$/,\$d" >"$new_users"
printf "\t}\n" >>"$new_users"
[ $debug -eq 1 ] && printf "Added a new user '%s' (ID=%u) with password '%s'.\n" "$new_username" "$new_id" "$new_password" 1>&2
#######################################################################################################
#                                                                                                     #
# edit the original file and replace the boxusers.users section with our new file                     #
#                                                                                                     #
#######################################################################################################
sed -e "/^[ \t]*users {\$/,/^[ \t]*}\$/d" "$copy" | sed -e "/^boxusers/r $new_users" >"$node_name"
#######################################################################################################
#                                                                                                     #
# remove temporary files                                                                              #
#                                                                                                     #
#######################################################################################################
rm "$copy" "$new_users" "$new_user" "$node_name" 2>/dev/null
#######################################################################################################
#                                                                                                     #
# end of script                                                                                       #
#                                                                                                     #
#######################################################################################################
exit 0
