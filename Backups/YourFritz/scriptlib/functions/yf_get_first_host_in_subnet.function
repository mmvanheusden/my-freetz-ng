#! /bin/true
# vi: set tabstop=4 syntax=sh : # colorize it in 'vi' and use shorter tabstops
# SPDX-License-Identifier: GPL-2.0-or-later
#######################################################################################
#                                                                                     #
# get_first_host_in_subnet - compute the first usable IPv4 address in the specified   #
#                            subnet                                                   #
#                                                                                     #
# parameters:                                                                         #
#   $1 - the subnet to use for computations in dotted decimal notation with mask      #
#        suffix                                                                       #
#                                                                                     #
# stdout:                                                                             #
#   the first usable host address (as hexadecimal string)                             #
#                                                                                     #
# return code:                                                                        #
#   0 - stdout is valid                                                               #
#   1 - parameter error                                                               #
#                                                                                     #
# remarks:                                                                            #
#   The first address (all unmasked bits set to zero) is interpreted as the 'network' #
#   address and is skipped. There's no usable result with a mask greater than 30,     #
#   because the possible two addresses with a 31-bit mask can't form a valid subnet.  #
#                                                                                     #
#######################################################################################
#                                                                                     #
# U: -                                                                                #
# W: -                                                                                #
# F: yf_is_decimal yf_ipv4_address yf_hex2dec yf_dec2hex                              #
# I: -                                                                                #
# K: network                                                                          #
#                                                                                     #
#######################################################################################
yf_get_first_host_in_subnet()
(
	in="$1" 
	addr="${in%%/*}"
	bits="${in#*/}"
	yf_is_decimal "$bits" || return 1
	( [ $bits -le 1 ] || [ $bits -gt 30 ] ) && return 1
	addr="$(yf_ipv4_address "$addr")"
	inv_mask=$(( ( 1 << ( 32 - bits ) ) - 1 ))
	mask=$(( ~inv_mask ))
	addr_dec=$(yf_hex2dec "$addr")
	res=$(( ( addr_dec & mask ) + 1 ))
	yf_dec2hex "$res"
	return 0
)
