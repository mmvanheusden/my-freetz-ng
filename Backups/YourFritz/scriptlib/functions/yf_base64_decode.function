#! /bin/true
# vi: set tabstop=4 syntax=sh : # colorize it in 'vi' and use shorter tabstops
# SPDX-License-Identifier: GPL-2.0-or-later
#######################################################################################
#                                                                                     #
# base64_decode - convert STDIN from base64 format to the encoded content, if no      #
#                 'base64' command exists, try to run an emulation, but this is very  #
#                 slow                                                                #
#                                                                                     #
# parameters:                                                                         #
#   none                                                                              #
#                                                                                     #
# stdin:                                                                              #
#   the content to decode                                                             #
#                                                                                     #
# stdout:                                                                             #
#   the decoded data                                                                  #
#                                                                                     #
# return code:                                                                        #
#   0 - stdout value is valid                                                         #
#   1 - error occured, 'base64' command was not found or input data is invalid        #
#                                                                                     #
#######################################################################################
#                                                                                     #
# U: sed printf expr dd                                                               #
# W: base64                                                                           #
# I: -                                                                                #
# F: yf_substring yf_index                                                            #
# K: base64                                                                           #
#                                                                                     #
#######################################################################################
yf_base64_decode()
(
	[ -t 0 ] && return 1
	if command -v base64 2>/dev/null 1>&2 ; then
		command base64 -d
		rc=$?
	else
		while read line; do
			! [ -z "$(expr \( "$line" : "\([^A-Za-z0-9+/\r=]\)" \) )" ] && return 1
			line=$(printf "%s" $line | sed -e "s|\r||g")
			[ $(( ${#line} % 4 )) -gt 0 ] && return 1
			i=0
			f=0
			while [ $i -lt ${#line} ]; do
				part=$(printf "%s" $(yf_substring "$line" $i 4) | sed -e "s|.|& |g" -e "s|+|_|g")
				i=$(( i + 4 ))
				v=0
				for c in $part; do
					[ $c = = ] \
						&& f=$(( f + 1 )) \
						|| v=$(( ( v * 64 ) + $(yf_index "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_/" $c) - 1 ))
				done
				[ $f -gt 0 ] && v=$(( v >> ( f * 2 ) ))
				s=16
				while [ $s -ge 0 ]; do
					d=$(( ( v >> s ) & 255 ))
					s=$(( s - 8 ))
					[ $d -eq 0 ] \
						&& dd if=/dev/zero bs=1 count=1 2>/dev/null \
						|| printf "%b" "\0$(( d >> 6 ))$(( ( d >> 3 ) & 7 ))$(( d & 7 ))"
				done
			done
		done
	fi
	return $rc
)
