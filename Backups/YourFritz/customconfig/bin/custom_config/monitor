#! /bin/sh -x
# vi: set tabstop=4 syntax=sh : # colorize it in 'vi' and use shorter tabstops
##################################################################################
#                                                                                #
# custom configuration settings                                                  #
#                                                                                #
# monitor changes to the settings directory and check every operation for their  #
# impact on the custom settings directory, regarding the include and exclude     #
# rules from our package definitions directory                                   #
#                                                                                #
##################################################################################
source $YF_CONFIG_EXPORTS
##################################################################################
#                                                                                #
# if write access isn't enabled for our settings directory, it's not necessary   #
# to monitor any file or directory                                               #
#                                                                                #
##################################################################################
[ -f $YF_CONFIG_SEMAPHORE_FILE ] || exit 1
##################################################################################
#                                                                                #
# if our PID file exists, it's an unexpected situation, but we check the process #
# too to detect an orphaned PID file, which we'll ignore as a lock and so it     #
# gets overwritten by our own PID                                                #
#                                                                                #
##################################################################################
if [ -f $YF_CONFIG_MONITOR_PID ]; then
	pid=$(cat $YF_CONFIG_MONITOR_PID 2>/dev/null)
	if [ ${#pid} -gt 0 -a -d /proc/$pid ]; then
		$YF_CONFIG_LOG "There's already another monitor process with PID $pid."
		exit 1
	else
		if [ ${#pid} -gt 0 ]; then
			$YF_CONFIG_LOG "Ignoring orphaned PID file ($YF_CONFIG_MONITOR_PID) for process $pid."
		fi
	fi
fi
##################################################################################
#                                                                                #
# establish this instance as active monitor                                      #
#                                                                                #
##################################################################################
echo $$ >$YF_CONFIG_MONITOR_PID
trap 'pid=$(cat $YF_CONFIG_MONITOR_PID);rm -f $YF_CONFIG_MONITOR_PID 2>/dev/null;kill $pid' EXIT HUP USR2
trap 'pid=$(cat $YF_CONFIG_INOTIFY_PID);kill $pid' USR1
##################################################################################
#                                                                                #
# include our helpers file here                                                  #
#                                                                                #
##################################################################################
source $YF_CONFIG_YF_HELPERS
##################################################################################
#                                                                                #
# subfunction to execute the inotifyd applet with a fifo output target           #
#                                                                                #
##################################################################################
execute_inotifyd()
{
	local inotify params="$1" fifo=$2
	inotifyd - $params >$fifo &
	inotify=$!
	echo $inotify >$YF_CONFIG_INOTIFY_PID
	wait $inotify
}
##################################################################################
#                                                                                #
# create an endless loop, until we get an USR2 signal, then we'll leave this     #
# script                                                                         #
#                                                                                #
##################################################################################
while [ -f $YF_CONFIG_MONITOR_PID ]; do
	fifo=$YF_CONFIG_RUNDIR/monitor_fifo
	rm -f $fifo 2>/dev/null
	mknod $fifo p
	files=""
	dirs=""
	for f in $(find $YF_CONFIG_CFGDIR -type f); do
		files="$files $f:wDM"
	done
	for d in $(find $YF_CONFIG_CFGDIR -type d); do
		dirs="$dirs $d:DMmynd" 
	done
	execute_inotifyd "$files $dirs" "$fifo" &
	while read op name1 name2; do
		case $op in 
			D|M|m|y|d)
				# refresh the list of monitored entries and start countdown
				kill -USR1 $(cat $YF_CONFIG_MONITOR_PID)
				[ x$(cat $YF_CONFIG_STATUS_FILE) == xunchanged ] && echo -n "changed" >$YF_CONFIG_STATUS_FILE
				$YF_CONFIG_LAZY_COUNTDOWN &
				;;
			u|x|o)
				# refresh the list of monitored entries, but do not start a countdown
				kill -USR1 $(cat $YF_CONFIG_MONITOR_PID)
				[ x$(cat $YF_CONFIG_STATUS_FILE) == xunchanged ] && echo -n "changed" >$YF_CONFIG_STATUS_FILE
				$YF_CONFIG_LAZY_COUNTDOWN &
				;;
			n)
				# file or directory created ... we will only refresh and countdown,
				# if it's really a file
				if [ ! -d $name1/$name2 ]; then
					kill -USR1 $(cat $YF_CONFIG_MONITOR_PID)
					[ x$(cat $YF_CONFIG_STATUS_FILE) == xunchanged ] && echo -n "changed" >$YF_CONFIG_STATUS_FILE
					$YF_CONFIG_LAZY_COUNTDOWN &
				fi
				;;
			w)
				# no reason to refresh the list of monitored entries, only start the countdown
				[ x$(cat $YF_CONFIG_STATUS_FILE) == xunchanged ] && echo -n "changed" >$YF_CONFIG_STATUS_FILE
				$YF_CONFIG_LAZY_COUNTDOWN &	
				;;
			*)
				# ignore this condition, it's not important to manage our settings
				;;
		esac
		echo "$op $name1 $name2" >>$YF_CONFIG_RUNDIR/cumulated_monitor_events
	done <$fifo
	rm -f $fifo 2>/dev/null
done
[ x$(cat $YF_CONFIG_STATUS_FILE) != xunchanged ] && $YF_CONFIG_WRITER
##################################################################################
#                                                                                #
# end of file                                                                    #
#                                                                                #
##################################################################################
